/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Address from './model/Address';
import Announcement from './model/Announcement';
import Chats from './model/Chats';
import Comments from './model/Comments';
import ContactInfo from './model/ContactInfo';
import Disease from './model/Disease';
import Doctor from './model/Doctor';
import Person from './model/Person';
import PublicUser from './model/PublicUser';
import ReactionPerson from './model/ReactionPerson';
import Specialization from './model/Specialization';
import StringResponse from './model/StringResponse';
import TokenResponse from './model/TokenResponse';
import AnnouncementControllerApi from './api/AnnouncementControllerApi';
import ChatControllerApi from './api/ChatControllerApi';
import ChatReactionsControllerApi from './api/ChatReactionsControllerApi';
import CommentReactionsControllerApi from './api/CommentReactionsControllerApi';
import CommentsControllerApi from './api/CommentsControllerApi';
import ContactInfoControllerApi from './api/ContactInfoControllerApi';
import DiseaseControllerApi from './api/DiseaseControllerApi';
import LogUserControllerApi from './api/LogUserControllerApi';
import ReadableDoctorControllerApi from './api/ReadableDoctorControllerApi';
import ReadablePublicUserControllerApi from './api/ReadablePublicUserControllerApi';
import ReadableUserControllerApi from './api/ReadableUserControllerApi';
import SagliktaAiControllerApi from './api/SagliktaAiControllerApi';
import SpecializationControllerApi from './api/SpecializationControllerApi';
import WorkAddressControllerApi from './api/WorkAddressControllerApi';


/**
* JS API client generated by OpenAPI Generator.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var SagliktanApi = require('index'); // See note below*.
* var xxxSvc = new SagliktanApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new SagliktanApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new SagliktanApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new SagliktanApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Address model constructor.
     * @property {module:model/Address}
     */
    Address,

    /**
     * The Announcement model constructor.
     * @property {module:model/Announcement}
     */
    Announcement,

    /**
     * The Chats model constructor.
     * @property {module:model/Chats}
     */
    Chats,

    /**
     * The Comments model constructor.
     * @property {module:model/Comments}
     */
    Comments,

    /**
     * The ContactInfo model constructor.
     * @property {module:model/ContactInfo}
     */
    ContactInfo,

    /**
     * The Disease model constructor.
     * @property {module:model/Disease}
     */
    Disease,

    /**
     * The Doctor model constructor.
     * @property {module:model/Doctor}
     */
    Doctor,

    /**
     * The Person model constructor.
     * @property {module:model/Person}
     */
    Person,

    /**
     * The PublicUser model constructor.
     * @property {module:model/PublicUser}
     */
    PublicUser,

    /**
     * The ReactionPerson model constructor.
     * @property {module:model/ReactionPerson}
     */
    ReactionPerson,

    /**
     * The Specialization model constructor.
     * @property {module:model/Specialization}
     */
    Specialization,

    /**
     * The StringResponse model constructor.
     * @property {module:model/StringResponse}
     */
    StringResponse,

    /**
     * The TokenResponse model constructor.
     * @property {module:model/TokenResponse}
     */
    TokenResponse,

    /**
    * The AnnouncementControllerApi service constructor.
    * @property {module:api/AnnouncementControllerApi}
    */
    AnnouncementControllerApi,

    /**
    * The ChatControllerApi service constructor.
    * @property {module:api/ChatControllerApi}
    */
    ChatControllerApi,

    /**
    * The ChatReactionsControllerApi service constructor.
    * @property {module:api/ChatReactionsControllerApi}
    */
    ChatReactionsControllerApi,

    /**
    * The CommentReactionsControllerApi service constructor.
    * @property {module:api/CommentReactionsControllerApi}
    */
    CommentReactionsControllerApi,

    /**
    * The CommentsControllerApi service constructor.
    * @property {module:api/CommentsControllerApi}
    */
    CommentsControllerApi,

    /**
    * The ContactInfoControllerApi service constructor.
    * @property {module:api/ContactInfoControllerApi}
    */
    ContactInfoControllerApi,

    /**
    * The DiseaseControllerApi service constructor.
    * @property {module:api/DiseaseControllerApi}
    */
    DiseaseControllerApi,

    /**
    * The LogUserControllerApi service constructor.
    * @property {module:api/LogUserControllerApi}
    */
    LogUserControllerApi,

    /**
    * The ReadableDoctorControllerApi service constructor.
    * @property {module:api/ReadableDoctorControllerApi}
    */
    ReadableDoctorControllerApi,

    /**
    * The ReadablePublicUserControllerApi service constructor.
    * @property {module:api/ReadablePublicUserControllerApi}
    */
    ReadablePublicUserControllerApi,

    /**
    * The ReadableUserControllerApi service constructor.
    * @property {module:api/ReadableUserControllerApi}
    */
    ReadableUserControllerApi,

    /**
    * The SagliktaAiControllerApi service constructor.
    * @property {module:api/SagliktaAiControllerApi}
    */
    SagliktaAiControllerApi,

    /**
    * The SpecializationControllerApi service constructor.
    * @property {module:api/SpecializationControllerApi}
    */
    SpecializationControllerApi,

    /**
    * The WorkAddressControllerApi service constructor.
    * @property {module:api/WorkAddressControllerApi}
    */
    WorkAddressControllerApi
};
